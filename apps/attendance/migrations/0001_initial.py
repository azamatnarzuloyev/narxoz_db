# Generated by Django 4.2.7 on 2025-07-22 12:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4')),
                ('port', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)])),
                ('login', models.CharField(blank=True, default='admin', max_length=20)),
                ('password', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('active', 'Faol'), ('blocked', 'Faol emas')], default='active', max_length=20)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('rtsp_url', models.URLField(blank=True)),
                ('last_ping', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Camera',
                'verbose_name_plural': 'Cameras',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(db_index=True, max_length=30)),
                ('last_name', models.CharField(db_index=True, max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30)),
                ('employee_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('position', models.CharField(blank=True, choices=[('director', 'Direktor'), ('manager', 'Menejer'), ('developer', 'Dasturchi'), ('designer', 'Dizayner'), ('accountant', 'Buxgalter'), ('hr', "Kadrlar bo'limi xodimi"), ('marketer', 'Marketolog'), ('operator', 'Operator'), ('engineer', 'Muhandis'), ('technician', 'Texnik xodim')], max_length=50)),
                ('status', models.CharField(choices=[('active', 'Faol'), ('blocked', 'Faol emas')], default='active', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Filial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('value', models.CharField(max_length=50, unique=True)),
                ('address', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Filial',
                'verbose_name_plural': 'Filials',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('narxoz', 'Narxoz'), ('fiskal', 'Fiskal'), ('moliya', 'Moliya')], max_length=50, unique=True)),
                ('label', models.CharField(blank=True, max_length=100)),
                ('employees_count', models.PositiveIntegerField(blank=True, default=0)),
                ('arrivals_count', models.PositiveIntegerField(blank=True, default=0)),
                ('departures_count', models.PositiveIntegerField(blank=True, default=0)),
                ('absentees_count', models.PositiveIntegerField(blank=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Terminal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('port', models.PositiveIntegerField(default=80, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)])),
                ('status', models.CharField(choices=[('active', 'Faol'), ('blocked', 'Faol emas')], default='active', max_length=20)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('last_ping', models.DateTimeField(blank=True, null=True)),
                ('filial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='terminals', to='attendance.filial')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='terminals', to='attendance.region')),
            ],
            options={
                'verbose_name': 'Terminal',
                'verbose_name_plural': 'Terminals',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='employee_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('faiss_id', models.IntegerField(blank=True, null=True)),
                ('face_encoding', models.JSONField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('camera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='attendance.camera')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='attendance.employee')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='attendance.region'),
        ),
        migrations.AddField(
            model_name='employee',
            name='terminal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='attendance.terminal'),
        ),
        migrations.AddField(
            model_name='camera',
            name='filial',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cameras', to='attendance.filial'),
        ),
        migrations.AddField(
            model_name='camera',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cameras', to='attendance.region'),
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('check_in', models.TimeField(blank=True, null=True)),
                ('check_out', models.TimeField(blank=True, null=True)),
                ('date', models.DateField(db_index=True)),
                ('status', models.CharField(choices=[('come', 'Kelgan'), ('latecomers', 'Kechikkan'), ('not_come', 'Kelmagan')], default='come', max_length=20)),
                ('face_image', models.ImageField(blank=True, upload_to='attendance_faces/')),
                ('distance', models.FloatField(blank=True, null=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('notes', models.TextField(blank=True)),
                ('camera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_records', to='attendance.camera')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='attendance.employee')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_records', to='attendance.region')),
            ],
            options={
                'verbose_name': 'Attendance Record',
                'verbose_name_plural': 'Attendance Records',
                'ordering': ['-date', '-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('login', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Faol'), ('blocked', 'Faol emas')], default='active', max_length=20)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('filial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admins', to='attendance.filial')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admins', to='attendance.region')),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UnknownFace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('face_image', models.ImageField(blank=True, upload_to='unknown_faces/')),
                ('recorded_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('face_encoding', models.JSONField(blank=True, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('camera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unknown_faces', to='attendance.camera')),
                ('linked_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unknown_faces', to='attendance.employee')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unknown_faces', to='attendance.region')),
            ],
            options={
                'verbose_name': 'Unknown Face',
                'verbose_name_plural': 'Unknown Faces',
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['recorded_at', 'is_processed'], name='attendance__recorde_40e1a9_idx'), models.Index(fields=['camera', 'recorded_at'], name='attendance__camera__b86336_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['first_name', 'last_name'], name='attendance__first_n_40dcfd_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['employee_id'], name='attendance__employe_c769bf_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['status', 'is_active'], name='attendance__status_2742d4_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['date', 'status'], name='attendance__date_64c311_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['employee', 'date'], name='attendance__employe_b6a945_idx'),
        ),
        migrations.AddIndex(
            model_name='attendancerecord',
            index=models.Index(fields=['region', 'date'], name='attendance__region__767520_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendancerecord',
            unique_together={('employee', 'date')},
        ),
    ]
